<?xml version="1.0"?>
<robot name="sensors" xmlns:xacro="http://www.ros.org/wiki/xacro">
	<sensor name="lidar" type="laser" update_rate="50">
		<parent link="base_link"/>
		<origin rpy="0 0 0" xyz="0 0 0"/>
		<update_rate>50</update_rate>
	</sensor>
	<gazebo reference="base_link">
		<sensor name="lmssick" type="ray">s
			<ray>
				<scan>
					<horizontal>
						<samples>540</samples>
						<resolution>0.5</resolution>
						<min_angle>-${3*PI/4}</min_angle>
						<max_angle>${3*PI/4}</max_angle></horizontal>
					<vertical>
						<samples>1</samples>
						<resolution>1</resolution>
						<min_angle>0</min_angle>
						<max_angle>0</max_angle>
					</vertical>
				</scan>
				<range>
					<min>0.5</min>
					<max>50</max>
					<resolution>1</resolution>
				</range>
				<noise>
					<type>gaussian</type>
					<mean>0</mean>
					<stddev>0.01</stddev>
				</noise>
			</ray>
			<plugin filename="libgazebo_ros_laser.so" name="lidar">
				<topicName>/scan</topicName>
				<frameName>base_link</frameName>
      			<visualize>true</visualize>
			</plugin>
		</sensor>
	</gazebo>

	<!--<sensor name="camera" type="camera" update_rate="30">
		<parent link="base_link"/>
		<origin rpy="0 0 0" xyz="0 0 0"/>
	</sensor>
	<gazebo reference="base_link">
		<sensor name="camera1" type="camera">
			<camera name="cam_head">
				<horizontal_fov>1.0708</horizontal_fov>
				<image>
					<width>1280</width>
					<height>720</height>
					<format>R8G8B8</format>
				</image>
				<clip>
					<near>0.02</near>
					<far>300</far>
				</clip>
				<noise>
					<type>gaussian</type>
					<mean>0.0</mean>
					<stddev>0.007</stddev>
				</noise>
			</camera>
			<plugin filename="libgazebo_ros_camera.so" name="camera_controller">
				<robotNamespace>asv</robotNamespace>
				<cameraName>camera</cameraName>
				<imageTopicName>image_raw</imageTopicName>
				<cameraInfoTopicName>camera_info</cameraInfoTopicName>
				<frameName>camera</frameName>
				<hackBaseline>0.07</hackBaseline>
				<distortionK1>0.0</distortionK1>
				<distortionK2>0.0</distortionK2>
				<distortionK3>0.0</distortionK3>
				<distortionT1>0.0</distortionT1>
				<distortionT2>0.0</distortionT2>
			</plugin>
		</sensor>
	</gazebo>-->
	
	<gazebo>
			<plugin filename="libhector_gazebo_ros_imu.so" name="imu_plugin">
				<updateRate>20</updateRate>
				<bodyName>base_link</bodyName>
				<topicName>imu_data</topicName>
				<accelOffset>0 0 0</accelOffset>
				<accelDrift>0 0 0</accelDrift>
				<accelDriftFrequency>0 0 0</accelDriftFrequency>
				<rateOffset>0 0 0</rateOffset>
				<rateDrift>0 0 0</rateDrift>
				<rateDriftFrequency>0 0 0</rateDriftFrequency>
				<rateGuassianNoise>0 0 0</rateGuassianNoise>
				<yawOffset>0</yawOffset>
				<yawDrift>0</yawDrift>
				<yawDriftFrequency>0</yawDriftFrequency>
				<yawGaussianNoise>0.000</yawGaussianNoise>
				<gaussianNoise>0.000</gaussianNoise>
				<rpyOffset>0 0 0</rpyOffset>
				<xyzOffset>0 0 0</xyzOffset>
			</plugin>
	</gazebo>
	<gazebo>
		<!--Be careful of Plugins that are for models and that are for links and for worlds.-->
			<plugin filename="libhector_gazebo_ros_gps.so" name="gps_sim">
				<updateRate>10</updateRate>
				<bodyName>base_link</bodyName>
				<topicName>/fix</topicName>
				<velocityTopicName>/vel</velocityTopicName>
				<drift>0 0 0</drift>
				<gaussianNoise>0.000 0.000 0.000</gaussianNoise>
				<velocityDrift>0 0 0</velocityDrift>
				<velocityGaussianNoise>0 0 0</velocityGaussianNoise>
			</plugin>
	</gazebo>
</robot>